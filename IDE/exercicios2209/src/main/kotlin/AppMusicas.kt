import javax.swing.JOptionPane
import org.apache.commons.dbcp2.BasicDataSource
import org.springframework.jdbc.core.BeanPropertyRowMapper
import org.springframework.jdbc.core.JdbcTemplate

fun main() {
    val musica1 = Musica()
    val musica2 = Musica()

    musica1.interprete = JOptionPane.showInputDialog(null, "Insira o interprete da primeira musica")
    musica1.acessosSpotify = JOptionPane.showInputDialog(null, "Insira o numero de acessos no spotify da primeira musica").toInt()

    musica2.interprete = JOptionPane.showInputDialog(null, "Insira o interprete da segunda musica")
    musica2.acessosSpotify = JOptionPane.showInputDialog(null, "Insira o numero de acessos no spotify da segunda musica").toInt()

    JOptionPane.showMessageDialog(null,"A música cantada por ${musica1.interprete} teve ${musica1.acessosSpotify} acessos no Spotify")

    JOptionPane.showMessageDialog(null,"A música cantada por ${musica2.interprete} teve ${musica2.acessosSpotify} acessos no Spotify")

    var encerramento1 = JOptionPane.showInputDialog(null, "O acesso ao spotify foi encerrado para musica 1? Digite 1 para sim ou qualquer outra coisa para não")

    if(encerramento1 == "1"){
        musica1.acessoEncerrado = true
    }

    var encerramento2 = JOptionPane.showInputDialog(null, "O acesso ao spotify foi encerrado para musica 1? Digite 1 para sim ou qualquer outra coisa para não")

    if(encerramento2 == "1"){
        musica2.acessoEncerrado = true
    }

    val dataSource = BasicDataSource();
    dataSource.driverClassName = "org.h2.Driver"
    dataSource.url = "jdbc:h2:mem:sptech"
    dataSource.username = "sa"
    dataSource.password = ""

    var jdbcTemplate = JdbcTemplate(dataSource)

    jdbcTemplate.execute("""
        create table musica (
          id INT GENERATED BY DEFAULT AS IDENTITY primary key,
            interprete varchar(40) not null,
            acessosSpotify INT,
            acessoEncerrado varchar(5)
        )
    """.trimIndent()
    )

    val linhasAfetadas = jdbcTemplate.update("""
        insert into musica (interprete, acessosSpotify, acessoEncerrado) values
        ('${musica1.interprete}', ${musica1.acessosSpotify}, ${musica1.acessoEncerrado}), ('${musica2.interprete}', ${musica2.acessosSpotify}, ${musica2.acessoEncerrado})
    """.trimIndent())
    println("$linhasAfetadas linhas inseridas")


    if(encerramento1 == "1"){
        JOptionPane.showMessageDialog(null, "A música do intérprete ${musica1.interprete}, possui ${musica1.acessosSpotify} acessos no Spotify. Ela já teve o acesso encerrado na plataforma")
    } else {
        JOptionPane.showMessageDialog(null, "A música do intérprete ${musica1.interprete}, possui ${musica1.acessosSpotify} acessos no Spotify. Ela não teve o acesso encerrado na plataforma")
    }

    if(encerramento2 == "1"){
        JOptionPane.showMessageDialog(null, "A música do intérprete ${musica2.interprete}, possui ${musica2.acessosSpotify} acessos no Spotify. Ela já teve o acesso encerrado na plataforma")
    } else {
        JOptionPane.showMessageDialog(null, "A música do intérprete ${musica2.interprete}, possui ${musica2.acessosSpotify} acessos no Spotify. Ela não teve o acesso encerrado na plataforma")
    }

    jdbcTemplate.update("""
        TRUNCATE TABLE musica;
    """.trimIndent())

}