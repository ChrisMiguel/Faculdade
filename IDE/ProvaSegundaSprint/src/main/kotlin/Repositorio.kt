import org.springframework.jdbc.core.BeanPropertyRowMapper
import org.springframework.jdbc.core.JdbcTemplate

class Repositorio {
    lateinit var jdbcTemplate: JdbcTemplate


    fun criar(){
        jdbcTemplate = Conexao().conectar()
    }

    fun criarTabela(){
        jdbcTemplate.execute("""
            create table music(
            id int GENERATED BY DEFAULT AS IDENTITY primary key,
            titulo varchar(255)
            artista varchar(255)
            dataCriacao date
            );
            """.trimIndent())
    }
fun inserir (musica: Musica){
    jdbcTemplate.update("""
        INSERT INTO musica (titulo, artista, data_criacao)
        values ('${musica.titulo}', '${musica.artista}', '${musica.dataCriacao}' 
""".trimIndent())
}
    fun existePorId(id:Int) : Boolean {
        val quantosExistem = jdbcTemplate.queryForObject(
            """
                SELECT count(*) from musica where id = $id
                """, Int::class.java
        )
        return quantosExistem > 0
    }
    fun bucarPorId(id:Int): Musica {
        return jdbcTemplate.queryForObject("""
            SELECT * FROM musica WHERE id=$id
            """, BeanPropertyRowMapper(Musica::class.java))
    }
    fun deletarPorId(id:Int){
        jdbcTemplate.update("""
            DELETE (*) FROM musica WHERE id = id
                    )
    }
}